using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using Windows.Data.Xml.Dom;
using Windows.UI.Notifications;
using WslAntiMalware.Communication;

namespace WslAntiMalware.ViewModels
{
    class DetectionsViewModel : BaseTabViewModel
    {
        private const String APP_ID = "amermeze.WSLAntiMalware";

        public DetectionsViewModel(IEndpoint endpoint) : base(endpoint)
        {
            var uiFactory = new TaskFactory(TaskScheduler.FromCurrentSynchronizationContext());
            Detections = new ObservableCollection<Detection>(endpoint.Detections());
            endpoint.ProcessDetected += (s, det) => uiFactory.StartNew(() => Detections.Insert(0, det) );
            endpoint.ProcessDetected += (s, det) => uiFactory.StartNew(() =>
            {
                string xml = $@"
                        <toast>
                            <visual>
                                <binding template='ToastGeneric'>
                                    <text>Bashware detected</text>
                                    <text>Executable Name: {det.ImageFileName}</text>
                                </binding>
                            </visual>
                        </toast>";

                XmlDocument doc = new XmlDocument();
                doc.LoadXml(xml);
                var toast = new ToastNotification(doc);
                ToastNotificationManager.CreateToastNotifier(APP_ID).Show(toast);
                toast.Activated += (not, e) => uiFactory.StartNew(() =>
                {
                    if (!Application.Current.MainWindow.IsVisible)
                    {
                        Application.Current.MainWindow.Show();
                    }
                    Application.Current.MainWindow.Activate();

                });
            });
        }

        public ObservableCollection<Detection> Detections { get; set; }
    }
}

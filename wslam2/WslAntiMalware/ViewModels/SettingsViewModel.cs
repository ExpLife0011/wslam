using Elysium.Controls;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using WslAntiMalware.Communication;

namespace WslAntiMalware.ViewModels
{
    public sealed class SettingsViewModel : BaseTabViewModel
    {
        public bool IsMonitoringOn { get; set; }
        public bool IsElevatedWslAllowed{ get; set; }

        public SettingsViewModel(IEndpoint endpoint) : base(endpoint)
        {
            var settings = endpoint.Settings();
            IsMonitoringOn = settings.IsMonitoringOn;
            IsElevatedWslAllowed = settings.IsElevatedWslAllowed;
        }

        public async void StartMonitoring(object sender, System.Windows.RoutedEventArgs e)
        {
            if (IsMonitoringOn)
            {
                return;
            }
            var toggle = (sender as ToggleSwitch);
            toggle.IsEnabled = false;
            var succeeded = await Endpoint.StartMonitoringAsync();
            IsMonitoringOn = succeeded;
            toggle.IsChecked = IsMonitoringOn;
            toggle.IsEnabled = true;
        }

        public async void StopMonitoring(object sender, System.Windows.RoutedEventArgs e)
        {
            if (!IsMonitoringOn)
            {
                return;
            }
            var toggle = (sender as ToggleSwitch);

            (sender as ToggleSwitch).IsEnabled = false;
            var suceeded = await Endpoint.StopMonitoringAsync();
            IsMonitoringOn = !suceeded;
            toggle.IsChecked = IsMonitoringOn;
            toggle.IsEnabled = true;
        }

    }
}

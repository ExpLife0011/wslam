//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WslAntiMalware.Communication {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Detection", Namespace="http://schemas.datacontract.org/2004/07/WslAntiMalware.Communication")]
    [System.SerializableAttribute()]
    public partial class Detection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WslAntiMalware.Communication.DetectionResolutionType ResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFileName {
            get {
                return this.ImageFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFileNameField, value) != true)) {
                    this.ImageFileNameField = value;
                    this.RaisePropertyChanged("ImageFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WslAntiMalware.Communication.DetectionResolutionType Resolution {
            get {
                return this.ResolutionField;
            }
            set {
                if ((this.ResolutionField.Equals(value) != true)) {
                    this.ResolutionField = value;
                    this.RaisePropertyChanged("Resolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetectionResolutionType", Namespace="http://schemas.datacontract.org/2004/07/WslAntiMalware.Communication")]
    public enum DetectionResolutionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Excepted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Killed = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogMessage", Namespace="http://schemas.datacontract.org/2004/07/WslAntiMalware.Communication")]
    [System.SerializableAttribute()]
    public partial class LogMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WslAntiMalware.Communication.Severity SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WslAntiMalware.Communication.Severity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Severity", Namespace="http://schemas.datacontract.org/2004/07/WslAntiMalware.Communication")]
    public enum Severity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Settings", Namespace="http://schemas.datacontract.org/2004/07/WslAntiMalware.Communication")]
    [System.SerializableAttribute()]
    public partial class Settings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsElevatedWslAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMonitoringOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsElevatedWslAllowed {
            get {
                return this.IsElevatedWslAllowedField;
            }
            set {
                if ((this.IsElevatedWslAllowedField.Equals(value) != true)) {
                    this.IsElevatedWslAllowedField = value;
                    this.RaisePropertyChanged("IsElevatedWslAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMonitoringOn {
            get {
                return this.IsMonitoringOnField;
            }
            set {
                if ((this.IsMonitoringOnField.Equals(value) != true)) {
                    this.IsMonitoringOnField = value;
                    this.RaisePropertyChanged("IsMonitoringOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WslAntiMalware.Communication", ConfigurationName="Communication.IWslAntiMalwareSystemServiceEndpoint", CallbackContract=typeof(WslAntiMalware.Communication.IWslAntiMalwareSystemServiceEndpointCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IWslAntiMalwareSystemServiceEndpoint {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Register" +
            "Client", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Register" +
            "ClientResponse")]
        void RegisterClient(string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Register" +
            "Client", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Register" +
            "ClientResponse")]
        System.Threading.Tasks.Task RegisterClientAsync(string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StartMon" +
            "itoring", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StartMon" +
            "itoringResponse")]
        bool StartMonitoring();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StartMon" +
            "itoring", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StartMon" +
            "itoringResponse")]
        System.Threading.Tasks.Task<bool> StartMonitoringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StopMoni" +
            "toring", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StopMoni" +
            "toringResponse")]
        bool StopMonitoring();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StopMoni" +
            "toring", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/StopMoni" +
            "toringResponse")]
        System.Threading.Tasks.Task<bool> StopMonitoringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Detectio" +
            "ns", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Detectio" +
            "nsResponse")]
        System.Collections.Generic.List<WslAntiMalware.Communication.Detection> Detections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Detectio" +
            "ns", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Detectio" +
            "nsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WslAntiMalware.Communication.Detection>> DetectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Logs", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/LogsResp" +
            "onse")]
        System.Collections.Generic.List<WslAntiMalware.Communication.LogMessage> Logs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Logs", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/LogsResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WslAntiMalware.Communication.LogMessage>> LogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Settings" +
            "", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Settings" +
            "Response")]
        WslAntiMalware.Communication.Settings Settings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Settings" +
            "", ReplyAction="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/Settings" +
            "Response")]
        System.Threading.Tasks.Task<WslAntiMalware.Communication.Settings> SettingsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWslAntiMalwareSystemServiceEndpointCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/OnMessag" +
            "e")]
        void OnMessage(WslAntiMalware.Communication.LogMessage Message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://WslAntiMalware.Communication/IWslAntiMalwareSystemServiceEndpoint/OnDetect" +
            "ion")]
        void OnDetection(WslAntiMalware.Communication.Detection Detection);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWslAntiMalwareSystemServiceEndpointChannel : WslAntiMalware.Communication.IWslAntiMalwareSystemServiceEndpoint, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WslAntiMalwareSystemServiceEndpointClient : System.ServiceModel.DuplexClientBase<WslAntiMalware.Communication.IWslAntiMalwareSystemServiceEndpoint>, WslAntiMalware.Communication.IWslAntiMalwareSystemServiceEndpoint {
        
        public WslAntiMalwareSystemServiceEndpointClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WslAntiMalwareSystemServiceEndpointClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WslAntiMalwareSystemServiceEndpointClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WslAntiMalwareSystemServiceEndpointClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WslAntiMalwareSystemServiceEndpointClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(string Token) {
            base.Channel.RegisterClient(Token);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string Token) {
            return base.Channel.RegisterClientAsync(Token);
        }
        
        public bool StartMonitoring() {
            return base.Channel.StartMonitoring();
        }
        
        public System.Threading.Tasks.Task<bool> StartMonitoringAsync() {
            return base.Channel.StartMonitoringAsync();
        }
        
        public bool StopMonitoring() {
            return base.Channel.StopMonitoring();
        }
        
        public System.Threading.Tasks.Task<bool> StopMonitoringAsync() {
            return base.Channel.StopMonitoringAsync();
        }
        
        public System.Collections.Generic.List<WslAntiMalware.Communication.Detection> Detections() {
            return base.Channel.Detections();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WslAntiMalware.Communication.Detection>> DetectionsAsync() {
            return base.Channel.DetectionsAsync();
        }
        
        public System.Collections.Generic.List<WslAntiMalware.Communication.LogMessage> Logs() {
            return base.Channel.Logs();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WslAntiMalware.Communication.LogMessage>> LogsAsync() {
            return base.Channel.LogsAsync();
        }
        
        public WslAntiMalware.Communication.Settings Settings() {
            return base.Channel.Settings();
        }
        
        public System.Threading.Tasks.Task<WslAntiMalware.Communication.Settings> SettingsAsync() {
            return base.Channel.SettingsAsync();
        }
    }
}

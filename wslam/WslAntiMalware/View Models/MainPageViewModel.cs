using System;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Input;
using WslAntiMalware.Communication;
using WslAntiMalware.Presentation;

namespace WslAntiMalware.ViewModel
{
    public class MainPageViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public MainPageViewModel(ServiceEndpoint endpoint)
        {
            _endpoint = endpoint;
            Messages = new ObservableCollection<LogMessage>();
            var uiFactory = new TaskFactory(TaskScheduler.FromCurrentSynchronizationContext());
            _endpoint.LogMessageEvent += (msg) => uiFactory.StartNew(() => { Messages.Insert(0, msg); });
            //Detections = new ObservableCollection<Detection>(
            //    _endpoint.Detections().Select(item => new Detection()
            //    {
            //        ImageFileName = item.ImageFileName,
            //        Resolution = item.Resolution.ToString();
            //    }).ToList()
            //);


            //_endpoint.LogMessageEvent += async (message) => { await uiFactory.StartNew(() => Messages.Insert(0, message)); };
        }



        public void RemoveDetectionItem(object sender, KeyRoutedEventArgs e)
        {
            if (e.Key != Windows.System.VirtualKey.Delete)
            {
                return;
            }
            var lw = sender as ListView;
            var oldIndex = lw.SelectedIndex;
            Detections.Remove(lw.SelectedItem as Detection);
            if (oldIndex > 0)
            {
                lw.SelectedIndex = oldIndex - 1;
            }
            else
            {
                if (lw.Items.Count > 0)
                {
                    lw.SelectedIndex = 0;
                }
            }


        }
        public ObservableCollection<Detection> Detections { get; set; }
        public ObservableCollection<LogMessage> Messages { get; set; }

        private ServiceEndpoint _endpoint;
    }
}

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.ServiceModel;
using System.Threading.Tasks;
using Windows.Foundation.Diagnostics;
using WslAntiMalware.Core;
using WslAntiMalware.ViewModel;

namespace WslAntiMalware.Communication
{
    public delegate void OnLogMessage(LogMessage message);
    public delegate void OnDetection(string imageFileName);


    public class ServiceEndpoint : IDisposable
    {
        public event OnLogMessage LogMessageEvent;
        public event OnDetection DetectionEvent;

        public ServiceEndpoint()
        {
            client = new WslAntiMalwareSystemServiceEndpointClient();
            client.OnMessageReceived += OnMessageReceived;
            client.OnDetectionReceived += OnDetection;
            client.RegisterClientAsync("WslAntiMalware");
            client.InnerChannel.Closed += (sender, e) => Debug.WriteLine("asdf");
            client.InnerChannel.Faulted += (sender, e) => Debug.WriteLine("asdfsff");
        }

        public Task<bool> StartMonitoring()
        {
            return client.StartMonitoringAsync();
        }

        public Task<bool> StopMonitoring()
        {
            return client.StopMonitoringAsync();
        }

        public void Register()
        {
            client.RegisterClientAsync("WslAntiMalware").Wait();
        }

        public List<Detection> Detections()
        {
            return client.DetectionsAsync().GetAwaiter().GetResult();
        }

        public void Dispose()
        {
            client.CloseAsync().Wait();
        }

        internal void OnDetection(object sender, OnDetectionReceivedEventArgs e)
        {
            DetectionEvent(e.ImageFileName);
        }

        internal void OnMessageReceived(object sender, OnMessageReceivedEventArgs e)
        {
            LogMessageEvent(e.Message);
        }


        private WslAntiMalwareSystemServiceEndpointClient client;
    }
}

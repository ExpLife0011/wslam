using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WslAntiMalware.Communication;
using WslAntiMalware.Storage;
using WSLSystemServiceCommunicationCore;

namespace WslAntiMalware
{
    public class SystemService
    {
        public SystemService(Settings Settings, DetectionsHistory Detections, LogsHistory Logs)
        {
            _settings = Settings;
            _detections = Detections;
            _logs = Logs;
            c = new AppServiceConnection();
            Task.Run(() =>
            {
                int s = 0;
                while (true)
                {
                    Console.WriteLine("CMD:");
                    var cmd = Console.ReadLine();
                    if (cmd == "detect")
                    {
                        var fn = Console.ReadLine();
                        c.NotifyDetection(fn);
                    } else if(cmd == "log")
                    {
                        var msg = Console.ReadLine();
                        _callback.OnMessage(new LogMessage(msg, (Severity)s));
                        s += 1;
                        s = s % 3;
                    }
                }
            });
        }

        public void Configure(ServiceEndpoint Endpoint)
        {
            _callback = Endpoint.Callback;
            Endpoint.OnClientRegister += ((s, e) => { Console.WriteLine("reg"); e.Status = 0; });
            Endpoint.OnStartMonitoring += ((s, e) => { Console.WriteLine("start"); e.Status = 0; });
            Endpoint.OnStopMonitoring += ((s, e) => { Console.WriteLine("stop"); e.Status = 0; });
            Endpoint.OnDetectionsRequest += ((s, e) => { e.Detections.AddRange(_detections.Detections); });
        }

        private ISystemServiceMessages _callback;
        private Settings _settings;
        private DetectionsHistory _detections;
        private LogsHistory _logs;
        private AppServiceConnection c;
    }
}

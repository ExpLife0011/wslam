using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SQLite;
using System.Diagnostics;
using System.Linq;
using System.ServiceModel;
using System.ServiceModel.Description;
using System.Text;
using System.Threading.Tasks;
using WslAntiMalware.Communication;
using WslAntiMalware.Storage;

namespace WslAntiMalware
{

    class Program
    {
        static void Main(string[] args)
        {
            var host = new ServiceHost(typeof(WslAntiMalwareSystemServiceEndpoint), new Uri("net.tcp://localhost:8000"));

            var binding = new NetTcpBinding(SecurityMode.None);
            host.AddServiceEndpoint(typeof(IWslAntiMalwareSystemServiceEndpoint), binding, "WslAntiMalwareSystemServiceEndpoint");
            ServiceMetadataBehavior smb = new ServiceMetadataBehavior();
            smb.HttpGetEnabled = false;
            host.Description.Behaviors.Add(smb);
            host.AddServiceEndpoint(ServiceMetadataBehavior.MexContractName, MetadataExchangeBindings.CreateMexTcpBinding(), "mex");

            var instanceProvider = new InstanceProviderBehavior<WslAntiMalwareSystemServiceEndpoint>(() => new WslAntiMalwareSystemServiceEndpoint(4));
            instanceProvider.AddToAllContracts(host);
            host.Open();
            Console.ReadLine();
            //var dh = new DetectionsHistory();

            //var wcfService = new WCFService();
            //try
            //{
            //    // Step 5 Start the service.  
            //    wcfService.Open();
            //    Console.WriteLine("The service is ready.");
            //    Console.WriteLine("Press <ENTER> to terminate service.");
            //    Console.WriteLine();
            //    int i = 0;
            //    while (true)
            //    {
            //        var msg = Console.ReadLine();
            //        wcfService.SendMessage(msg, (Severity)(i % 3));
            //        i = i + 1;
            //    }

            //    // Close the ServiceHostBase to shutdown the service.  
            //}
            //catch (CommunicationException ce)
            //{
            //    Console.WriteLine("An exception occurred: {0}", ce.Message);
            //    wcfService.Abort();
            //}

        }
    }
}

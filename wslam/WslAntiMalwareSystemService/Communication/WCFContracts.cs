using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace WslAntiMalware.Communication
{
    [DataContract]
    public class Detection
    {
        public Detection(long UID, string ImageFileName, DetectionResolutionType Resolution)
        {
            this.ImageFileName = ImageFileName;
            this.Resolution = Resolution;
            this.UID = UID;
        }

        public Detection(string ImageFileName, DetectionResolutionType Resolution) : this(0, ImageFileName, Resolution) { }

        [DataMember]
        public string ImageFileName { get; set; }

        [DataMember]
        public DetectionResolutionType Resolution { get; set; }

        [DataMember]
        public long UID { get; set; }
    }

    [DataContract]
    public class LogMessage
    {

        public LogMessage(long UID, string Log, Severity Severity)
        {
            this.UID = UID;
            this.Log = Log;
            this.Severity = Severity;
        }

        public LogMessage(string Log, Severity Severity) : this(0, Log, Severity) { }

        [DataMember]
        public string Log { get; set; }

        [DataMember]
        public Severity Severity { get; set; }

        [DataMember]
        public long UID { get; set; }

        static long NextUID;
    }

    [DataContract(Name = "Severity")]
    public enum Severity
    {
        [EnumMember]
        Information,
        [EnumMember]
        Warning,
        [EnumMember]
        Error,
    }

    [DataContract(Name = "DetectionResolutionType")]
    public enum DetectionResolutionType : Int32
    {
        [EnumMember]
        Excepted,
        [EnumMember]
        Killed,
    }

    [DataContract(Name = "Settings")]
    public class Settings
    {
        public Settings(bool IsMonitoringOn, bool IsElevetedWslAllowed)
        {
            this.IsMonitoringOn = IsMonitoringOn;
            this.IsElevatedWslAllowed = IsElevatedWslAllowed;
        }

        [DataMember]
        public bool IsMonitoringOn { get; set; }

        [DataMember]
        public bool IsElevatedWslAllowed { get; set; }
    }

    [ServiceContract(Namespace = "http://WslAntiMalware.Communication", CallbackContract = typeof(ISystemServiceMessages), SessionMode = SessionMode.Required)]
    public interface IWslAntiMalwareSystemServiceEndpoint
    {
        [OperationContract]
        void RegisterClient(string Token);
        [OperationContract]
        bool StartMonitoring();
        [OperationContract]
        bool StopMonitoring();
        [OperationContract]
        List<Detection> Detections();
        [OperationContract]
        List<LogMessage> Logs();
        [OperationContract]
        Settings Settings();

        void LogMessage(string msg, Severity severity);
    }

    public interface ISystemServiceMessages
    {
        [OperationContract(IsOneWay = true)]
        void OnMessage(LogMessage Message);
        [OperationContract(IsOneWay = true)]
        void OnDetection(Detection Detection);
    }
}
